---
name: Test

on:
  pull_request:
    branches:
      - main
    paths:
      - "**.py"
      - "**.toml"
      - "Dockerfile"
      - "requirements.txt"
  workflow_dispatch:

env:
  REPO_NAME: mattkobayashi
  IMAGE_NAME: cover-letter-writer

permissions:
  contents: read

jobs:
  test:
    name: Test Python and Docker image build
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        container: [cover-letter-writer]
    steps:
      # Set up Python 3.13
      # https://github.com/actions/setup-python
      - name: Set up Python
        uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5.4.0
        with:
          python-version: "3.13"
      # Checkout repository
      # https://github.com/actions/checkout
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      # Install test dependencies
      - name: Install test dependencies
        run: |
          set -eux
          pipx install uv
          uv run \
            --with pytest==8.3.4 \
            pytest tests/ -v
      # Add support for more platforms with QEMU (optional)
      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0
      # Set up Docker Buildx
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0
      # Build and export image to Docker daemon
      # https://github.com/docker/build-push-action
      - name: Build and export to Docker
        id: build-export
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6.15.0
        with:
          load: true
          tags: "${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}:test"
      # Install uuid-runtime package
      - name: Install `uuid-runtime`
        run: |
          set -x
          sudo apt-get --yes install uuid-runtime
      # Test the built image
      - name: Test image
        run: |
          set -x
          CONTAINER_ID="$(uuidgen)"
          docker container run --attach=stdout --attach=stderr --init --name=$CONTAINER_ID --rm ${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}:test &
          sleep 5
          docker container stop $CONTAINER_ID
      # Remove the test image
      - name: Remove test image
        if: ${{ !cancelled() }}
        run: |
          set -x
          docker image rm --force ${{ steps.build-export.outputs.imageid }}
